<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <!-- Common Build Settings and Configurations -->
    <PropertyGroup>
        <NuGetRoot Condition=" '$(NuGetRoot)' == '' ">$(MsBuildThisFileDirectory)..</NuGetRoot>
        <Configuration Condition=" '$(Configuration)' == '' Or '$(Configuration)' == 'CI' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <PlatformTarget>x86</PlatformTarget>
        <ProductVersion>8.0.30703</ProductVersion>
        <SchemaVersion>2.0</SchemaVersion>
        <AppDesignerFolder>Properties</AppDesignerFolder>
        <TargetFrameworkProfile />
        <FileAlignment>512</FileAlignment>
        <TargetFrameworkProfile />
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
        <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
        <DefineConstants>$(DefineConstants);TRACE</DefineConstants>
        <AdditionalSettingsImport Condition=" $(AdditionalSettingsImport) == '' ">$(NuGetRoot)\Extended.Settings.targets</AdditionalSettingsImport>
    </PropertyGroup>
    
    <PropertyGroup>
        <Dev10Directory>$(MSBuildExtensionsPath)\..\Microsoft Visual Studio 10.0\Common7\IDE</Dev10Directory>
        <Dev11Directory>$(MSBuildExtensionsPath)\..\Microsoft Visual Studio 11.0\Common7\IDE</Dev11Directory>
        <Dev11Available Condition=" '$(VisualStudioVersion)' == '11.0' Or Exists('$(Dev11Directory)') ">true</Dev11Available>
    </PropertyGroup>
    
    <!-- If Dev11 is installed, we will no longer be able to open the solution from Dev10 on that box. This is a consequence of us linking against 4.5 components from the GAC -->
    <PropertyGroup Condition=" $(Dev11Available) == true ">
        <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
        <ComponentHostAssembly>Microsoft.VisualStudio.ComponentModelHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</ComponentHostAssembly>
        <ExtensionManagerAssembly>Microsoft.VisualStudio.ExtensionManager, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL</ExtensionManagerAssembly>
        <ExtensionsExplorerAssembly>Microsoft.VisualStudio.ExtensionsExplorer, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL</ExtensionsExplorerAssembly>
        <ExtensionsExplorerUIAssembly>Microsoft.VisualStudio.ExtensionsExplorer.UI, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL</ExtensionsExplorerUIAssembly>
    </PropertyGroup>

    <PropertyGroup Condition=" $(Dev11Available) != true ">
        <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
        <ComponentHostAssembly>Microsoft.VisualStudio.ComponentModelHost, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</ComponentHostAssembly>
        <ExtensionManagerAssembly>Microsoft.VisualStudio.ExtensionManager, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL</ExtensionManagerAssembly>
        <ExtensionsExplorerAssembly>Microsoft.VisualStudio.ExtensionsExplorer, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL</ExtensionsExplorerAssembly>
        <ExtensionsExplorerUIAssembly>Microsoft.VisualStudio.ExtensionsExplorer.UI, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL</ExtensionsExplorerUIAssembly>
    </PropertyGroup>

    <!-- Common settings for Debug and Coverage builds -->
    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' Or '$(Configuration)' == 'Coverage' Or '$(Configuration)' == 'Mono Debug'">
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <Optimize>false</Optimize>
        <OutputPath>bin\Debug\</OutputPath>
        <DefineConstants>$(DefineConstants);DEBUG;CODE_ANALYSIS</DefineConstants>
    </PropertyGroup>

    <!-- Settings only for Release builds -->
    <PropertyGroup Condition=" '$(Configuration)' == 'Release' Or '$(Configuration)' == 'Mono Release'">
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
        <OutputPath>bin\Release\</OutputPath>
    </PropertyGroup>

    <!-- Settings only for Coverage builds -->
    <PropertyGroup Condition=" '$(Configuration)' == 'Coverage' ">
        <OutputPath>bin\Coverage\</OutputPath>
        <Coverage>true</Coverage>
        <DefineConstants>$(DefineConstants);CODE_COVERAGE</DefineConstants> 
    </PropertyGroup>

    <!-- There's no client profile on Mono -->
    <PropertyGroup Condition=" '$(Configuration)' == 'Mono Debug' Or '$(Configuration)' == 'Mono Release' Or '$(OS)' != 'Windows_NT'">
        <MonoBuild>true</MonoBuild>
        <DefineConstants>$(DefineConstants);MONO;</DefineConstants>
    </PropertyGroup>    
    
    <Import Project="$(MsBuildThisFileDirectory)\NuGet.Restore.targets"/>
    <Import Project="$(AdditionalSettingsImport)" Condition="Exists('$(AdditionalSettingsImport)')" />
</Project>
